services:
  app:
    build: .
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py test &&
             python manage.py loaddata fixture.json &&
             gunicorn --bind 0.0.0.0:8080 library_service.wsgi:application"

        sh -c "python manage.py wait_for_db && python manage.py migrate && python manage.py runserver 0.0.0.0:8080"

    volumes:
      - .:/app
      - static_data:/app/static
      - media_data:/app/media
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - DATABASE_NAME=library
      - DATABASE_USERNAME=admin@gmail.com
      - DATABASE_PASSWORD=admin

volumes:
  postgres_data:
  static_data:
  media_data: